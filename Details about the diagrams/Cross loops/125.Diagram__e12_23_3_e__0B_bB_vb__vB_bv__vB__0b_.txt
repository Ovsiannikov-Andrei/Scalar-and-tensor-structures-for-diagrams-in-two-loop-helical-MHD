Nickel index of the Feynman diagram: e12|23|3|e|:0B_bB_vb|vB_bv|vB|0b| 

Diagram symmetry factor: 1 

Diagram description start.

Propagators (lines) in the diagram: 
{'line 0': [(0, 1), ['b', 'B']], 'line 1': [(0, 2), ['v', 'b']], 'line 2': [(1, 2), ['v', 'B']], 'line 3': [(1, 3), ['b', 'v']], 'line 4': [(2, 3), ['v', 'B']]} 
Notation for line n: [(vertex_1, vertex_2), (field_flows_out_of_vertex_1, field_flows_into_vertex_2)]

Loops in the diagram for a given internal momentum: 
[('line 0', 'line 1', 'line 2'), ('line 2', 'line 3', 'line 4')] 

Momentum propagating along the lines: 
{'line 0': -k + p, 'line 1': k, 'line 2': -k + p - q, 'line 3': q, 'line 4': p - q}

Frequency propagating along the lines: 
{'line 0': w - w_k, 'line 1': w_k, 'line 2': w - w_k - w_q, 'line 3': w_q, 'line 4': w - w_q}

Diagram integrand: 
PbB(-k, -w_k, 1, 3)*Pbv_scalar_part(q, w_q, 5, 10)*PvB(-q, -w_q, 8, 11)*PvB(-k - q, -w_k - w_q, 4, 7)*Pvb(k, w_k, 2, 6)*vertex_factor_Bbv(-k, 3, 5, 4)*vertex_factor_Bbv(p, 0, 1, 2)*vertex_factor_Bbv(-q, 11, 9, 10)*vertex_factor_Bbv(-k - q, 7, 6, 8)

The calculation of the integrand is divided into two stages: 
1. The calculation of the tensor structure T_ij 
2. The calculation of the scalar part F 
See file General_notation.txt for details.

Expression for the scalar function F: 
A**4*(-sc_prod(B, k) - sc_prod(B, q))*D_v(k)*D_v(q)*alpha(nuo, k, w_k)*beta(nuo, q, w_q)*beta_star(nuo, k, w_k)*sc_prod(B, k)*sc_prod(B, q)**2/(xi(k, w_k)**2*xi(q, w_q)**2*xi(k + q, w_k + w_q)*xi_star(k, w_k)*xi_star(q, w_q))

Expression for the tensor function T_ij (numbers for vector indices instead of alphabetic [1]): 
(I*rho*H(k, 2, 6) + P(k, 2, 6))*(I*rho*H(q, 5, 10) + P(q, 5, 10))*(-A*(-mom(k, 6) - mom(q, 6))*kd(7, 8) + (-mom(k, 8) - mom(q, 8))*kd(7, 6))*(-A*kd(0, 2)*mom(p, 1) + kd(0, 1)*mom(p, 2))*(A*kd(3, 4)*mom(k, 5) - kd(3, 5)*mom(k, 4))*(A*kd(11, 10)*mom(q, 9) - kd(11, 9)*mom(q, 10))*P(k, 1, 3)*P(q, 8, 11)*P(k + q, 4, 7)

Scalar part of the propagator product  in a Wolfram Mathematica-friendly format: 
PbB[-k, -w_k]*Pvb[k, w_k]*PvB[-k - q, -w_k - w_q]*Pbv[q, w_q]*PvB[-q, -w_q]

The diagram is UV-convergent: 
True

Diagram description end.

Diagram integrand calculation start.

Calculation of F. 

The expression for F after integration over frequencies: 
-4*pi**2*(-A**4*(-sc_prod(B, k) - sc_prod(B, q))*D_v(k)*D_v(q)*alpha(nuo, k, -f_1(B, nuo, k))*beta(nuo, k, f_1(B, nuo, k))*beta(nuo, q, -f_1(B, nuo, q))*sc_prod(B, k)*sc_prod(B, q)**2/(16*(-f_1(B, nuo, k) - f_2(B, nuo, k))**2*(f_1(B, nuo, k) - f_2(B, nuo, k))*(-f_1(B, nuo, q) - f_2(B, nuo, q))**2*(f_1(B, nuo, q) - f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_1(B, nuo, q) - f_1(B, nuo, k + q))*(-f_1(B, nuo, k) - f_1(B, nuo, q) - f_2(B, nuo, k + q))*f_1(B, nuo, k)**2*f_1(B, nuo, q)**2) - A**4*(-sc_prod(B, k) - sc_prod(B, q))*D_v(k)*D_v(q)*alpha(nuo, k, -f_1(B, nuo, k))*beta(nuo, k, f_1(B, nuo, k))*beta(nuo, q, -f_2(B, nuo, q))*sc_prod(B, k)*sc_prod(B, q)**2/(16*(-f_1(B, nuo, k) - f_2(B, nuo, k))**2*(f_1(B, nuo, k) - f_2(B, nuo, k))*(-f_1(B, nuo, q) - f_2(B, nuo, q))**2*(-f_1(B, nuo, q) + f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_1(B, nuo, k + q) - f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_2(B, nuo, q) - f_2(B, nuo, k + q))*f_1(B, nuo, k)**2*f_2(B, nuo, q)**2) - A**4*(-sc_prod(B, k) - sc_prod(B, q))*D_v(k)*D_v(q)*alpha(nuo, k, -f_2(B, nuo, k))*beta(nuo, k, f_2(B, nuo, k))*beta(nuo, q, -f_1(B, nuo, q))*sc_prod(B, k)*sc_prod(B, q)**2/(16*(-f_1(B, nuo, k) - f_2(B, nuo, k))**2*(-f_1(B, nuo, k) + f_2(B, nuo, k))*(-f_1(B, nuo, q) - f_2(B, nuo, q))**2*(f_1(B, nuo, q) - f_2(B, nuo, q))*(-f_1(B, nuo, q) - f_1(B, nuo, k + q) - f_2(B, nuo, k))*(-f_1(B, nuo, q) - f_2(B, nuo, k) - f_2(B, nuo, k + q))*f_1(B, nuo, q)**2*f_2(B, nuo, k)**2) - A**4*(-sc_prod(B, k) - sc_prod(B, q))*D_v(k)*D_v(q)*alpha(nuo, k, -f_2(B, nuo, k))*beta(nuo, k, f_2(B, nuo, k))*beta(nuo, q, -f_2(B, nuo, q))*sc_prod(B, k)*sc_prod(B, q)**2/(16*(-f_1(B, nuo, k) - f_2(B, nuo, k))**2*(-f_1(B, nuo, k) + f_2(B, nuo, k))*(-f_1(B, nuo, q) - f_2(B, nuo, q))**2*(-f_1(B, nuo, q) + f_2(B, nuo, q))*(-f_1(B, nuo, k + q) - f_2(B, nuo, k) - f_2(B, nuo, q))*(-f_2(B, nuo, k) - f_2(B, nuo, q) - f_2(B, nuo, k + q))*f_2(B, nuo, k)**2*f_2(B, nuo, q)**2)) 

The previous expression in a Wolfram Mathematica-friendly format: 
-4*Pi**2*(-A**4*(-sc_prod[B, k] - sc_prod[B, q])*D_v[k]*D_v[q]*alpha[nuo, k, -f_1[B, nuo, k]]*beta[nuo, k, f_1[B, nuo, k]]*beta[nuo, q, -f_1[B, nuo, q]]*sc_prod[B, k]*sc_prod[B, q]**2/(16*(-f_1[B, nuo, k] - f_2[B, nuo, k])**2*(f_1[B, nuo, k] - f_2[B, nuo, k])*(-f_1[B, nuo, q] - f_2[B, nuo, q])**2*(f_1[B, nuo, q] - f_2[B, nuo, q])*(-f_1[B, nuo, k] - f_1[B, nuo, q] - f_1[B, nuo, k + q])*(-f_1[B, nuo, k] - f_1[B, nuo, q] - f_2[B, nuo, k + q])*f_1[B, nuo, k]**2*f_1[B, nuo, q]**2) - A**4*(-sc_prod[B, k] - sc_prod[B, q])*D_v[k]*D_v[q]*alpha[nuo, k, -f_1[B, nuo, k]]*beta[nuo, k, f_1[B, nuo, k]]*beta[nuo, q, -f_2[B, nuo, q]]*sc_prod[B, k]*sc_prod[B, q]**2/(16*(-f_1[B, nuo, k] - f_2[B, nuo, k])**2*(f_1[B, nuo, k] - f_2[B, nuo, k])*(-f_1[B, nuo, q] - f_2[B, nuo, q])**2*(-f_1[B, nuo, q] + f_2[B, nuo, q])*(-f_1[B, nuo, k] - f_1[B, nuo, k + q] - f_2[B, nuo, q])*(-f_1[B, nuo, k] - f_2[B, nuo, q] - f_2[B, nuo, k + q])*f_1[B, nuo, k]**2*f_2[B, nuo, q]**2) - A**4*(-sc_prod[B, k] - sc_prod[B, q])*D_v[k]*D_v[q]*alpha[nuo, k, -f_2[B, nuo, k]]*beta[nuo, k, f_2[B, nuo, k]]*beta[nuo, q, -f_1[B, nuo, q]]*sc_prod[B, k]*sc_prod[B, q]**2/(16*(-f_1[B, nuo, k] - f_2[B, nuo, k])**2*(-f_1[B, nuo, k] + f_2[B, nuo, k])*(-f_1[B, nuo, q] - f_2[B, nuo, q])**2*(f_1[B, nuo, q] - f_2[B, nuo, q])*(-f_1[B, nuo, q] - f_1[B, nuo, k + q] - f_2[B, nuo, k])*(-f_1[B, nuo, q] - f_2[B, nuo, k] - f_2[B, nuo, k + q])*f_1[B, nuo, q]**2*f_2[B, nuo, k]**2) - A**4*(-sc_prod[B, k] - sc_prod[B, q])*D_v[k]*D_v[q]*alpha[nuo, k, -f_2[B, nuo, k]]*beta[nuo, k, f_2[B, nuo, k]]*beta[nuo, q, -f_2[B, nuo, q]]*sc_prod[B, k]*sc_prod[B, q]**2/(16*(-f_1[B, nuo, k] - f_2[B, nuo, k])**2*(-f_1[B, nuo, k] + f_2[B, nuo, k])*(-f_1[B, nuo, q] - f_2[B, nuo, q])**2*(-f_1[B, nuo, q] + f_2[B, nuo, q])*(-f_1[B, nuo, k + q] - f_2[B, nuo, k] - f_2[B, nuo, q])*(-f_2[B, nuo, k] - f_2[B, nuo, q] - f_2[B, nuo, k + q])*f_2[B, nuo, k]**2*f_2[B, nuo, q]**2)) 

The expression for F after reduction to a common denominator: 
pi**2*A**4*(-sc_prod(B, k) - sc_prod(B, q))*((-f_1(B, nuo, k) + f_2(B, nuo, k))*(-f_1(B, nuo, q) + f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_1(B, nuo, k + q) - f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_2(B, nuo, q) - f_2(B, nuo, k + q))*(-f_1(B, nuo, q) - f_1(B, nuo, k + q) - f_2(B, nuo, k))*(-f_1(B, nuo, q) - f_2(B, nuo, k) - f_2(B, nuo, k + q))*(-f_1(B, nuo, k + q) - f_2(B, nuo, k) - f_2(B, nuo, q))*(-f_2(B, nuo, k) - f_2(B, nuo, q) - f_2(B, nuo, k + q))*alpha(nuo, k, -f_1(B, nuo, k))*beta(nuo, k, f_1(B, nuo, k))*beta(nuo, q, -f_1(B, nuo, q))*f_2(B, nuo, k)**2*f_2(B, nuo, q)**2 + (-f_1(B, nuo, k) + f_2(B, nuo, k))*(f_1(B, nuo, q) - f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_1(B, nuo, q) - f_1(B, nuo, k + q))*(-f_1(B, nuo, k) - f_1(B, nuo, q) - f_2(B, nuo, k + q))*(-f_1(B, nuo, q) - f_1(B, nuo, k + q) - f_2(B, nuo, k))*(-f_1(B, nuo, q) - f_2(B, nuo, k) - f_2(B, nuo, k + q))*(-f_1(B, nuo, k + q) - f_2(B, nuo, k) - f_2(B, nuo, q))*(-f_2(B, nuo, k) - f_2(B, nuo, q) - f_2(B, nuo, k + q))*alpha(nuo, k, -f_1(B, nuo, k))*beta(nuo, k, f_1(B, nuo, k))*beta(nuo, q, -f_2(B, nuo, q))*f_1(B, nuo, q)**2*f_2(B, nuo, k)**2 + (f_1(B, nuo, k) - f_2(B, nuo, k))*(-f_1(B, nuo, q) + f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_1(B, nuo, q) - f_1(B, nuo, k + q))*(-f_1(B, nuo, k) - f_1(B, nuo, q) - f_2(B, nuo, k + q))*(-f_1(B, nuo, k) - f_1(B, nuo, k + q) - f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_2(B, nuo, q) - f_2(B, nuo, k + q))*(-f_1(B, nuo, k + q) - f_2(B, nuo, k) - f_2(B, nuo, q))*(-f_2(B, nuo, k) - f_2(B, nuo, q) - f_2(B, nuo, k + q))*alpha(nuo, k, -f_2(B, nuo, k))*beta(nuo, k, f_2(B, nuo, k))*beta(nuo, q, -f_1(B, nuo, q))*f_1(B, nuo, k)**2*f_2(B, nuo, q)**2 + (f_1(B, nuo, k) - f_2(B, nuo, k))*(f_1(B, nuo, q) - f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_1(B, nuo, q) - f_1(B, nuo, k + q))*(-f_1(B, nuo, k) - f_1(B, nuo, q) - f_2(B, nuo, k + q))*(-f_1(B, nuo, k) - f_1(B, nuo, k + q) - f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_2(B, nuo, q) - f_2(B, nuo, k + q))*(-f_1(B, nuo, q) - f_1(B, nuo, k + q) - f_2(B, nuo, k))*(-f_1(B, nuo, q) - f_2(B, nuo, k) - f_2(B, nuo, k + q))*alpha(nuo, k, -f_2(B, nuo, k))*beta(nuo, k, f_2(B, nuo, k))*beta(nuo, q, -f_2(B, nuo, q))*f_1(B, nuo, k)**2*f_1(B, nuo, q)**2)*D_v(k)*D_v(q)*sc_prod(B, k)*sc_prod(B, q)**2/(4*(-f_1(B, nuo, k) - f_2(B, nuo, k))**2*(-f_1(B, nuo, k) + f_2(B, nuo, k))*(f_1(B, nuo, k) - f_2(B, nuo, k))*(-f_1(B, nuo, q) - f_2(B, nuo, q))**2*(-f_1(B, nuo, q) + f_2(B, nuo, q))*(f_1(B, nuo, q) - f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_1(B, nuo, q) - f_1(B, nuo, k + q))*(-f_1(B, nuo, k) - f_1(B, nuo, q) - f_2(B, nuo, k + q))*(-f_1(B, nuo, k) - f_1(B, nuo, k + q) - f_2(B, nuo, q))*(-f_1(B, nuo, k) - f_2(B, nuo, q) - f_2(B, nuo, k + q))*(-f_1(B, nuo, q) - f_1(B, nuo, k + q) - f_2(B, nuo, k))*(-f_1(B, nuo, q) - f_2(B, nuo, k) - f_2(B, nuo, k + q))*(-f_1(B, nuo, k + q) - f_2(B, nuo, k) - f_2(B, nuo, q))*(-f_2(B, nuo, k) - f_2(B, nuo, q) - f_2(B, nuo, k + q))*f_1(B, nuo, k)**2*f_1(B, nuo, q)**2*f_2(B, nuo, k)**2*f_2(B, nuo, q)**2) 

Preparation for numerical integration for the integrand's scalar part consists in carrying out a replacing of variables k, q --> B*k/nuo, B*q/nuo, after which UV-convergent part of the diagram is divided into a dimensional factor C_F and a function F1 depending only on uo and integration variables k and q: F = C_F*F1.

1. In case of UV-convergent diagrams UV-convergent part is equal to F.
1. In case of UV-divergent diagrams UV-convergent part is equal to F - F(B = 0) [1].

The expression for F1 after momentums replacing: 
16*k**(-d - 2*eps + 4)*q**(-d - 2*eps + 4)*z_k*z_q**2*(-k*z_k - q*z_q)*((k**2*(uo + 1) - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(q**2*(uo + 1) - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)*sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)*(k**2*uo - k**2*(uo + 1)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + k**2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(q**2*uo + q**2*(uo + 1)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)/16 - (k**2*(uo + 1) - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(q**2*(uo + 1) + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)*sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)*(k**2*uo - k**2*(uo + 1)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + k**2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(q**2*uo + q**2*(uo + 1)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)/16 - (k**2*(uo + 1) + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(q**2*(uo + 1) - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)*sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)*(k**2*uo - k**2*(uo + 1)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + k**2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(q**2*uo + q**2*(uo + 1)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)/16 + (k**2*(uo + 1) + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(q**2*(uo + 1) + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)*sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)*(k**2*uo - k**2*(uo + 1)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + k**2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(q**2*uo + q**2*(uo + 1)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)/16)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)/(k**3*q**2*(uo + 1)**4*(k**2*(uo + 1) - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(k**2*(uo + 1) + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(q**2*(uo + 1) - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*(q**2*(uo + 1) + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)*(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2) 

The expression for common C_F after momentums replacing: 
4*pi**2*A**4*go**2*nuo**11*(B/nuo)**(-2*d - 4*eps + 8)/B**10 

Calculation of T_ij. 

For UV-divergent diagrams, the expression for T_ij after calculating tensor convolutions is calculated both in the case of the presence of an external field B and for B = 0. For UV-finite diagrams, there is an expression for T_ij only in the external field. 

1. Tensor structure without the presence of B field (Lambda part): 
None 

2. Tensor structure with the presence of B field (B part): 
I*A*k*q*rho*(A*k*q*z*(-A**2*k*z - A**2*q + k*z)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + 2*A*k*q*z*(A**2*k*z + A**2*q - k*z)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + A*k*(d - 2)*(z - z_k*z_q)*(k**2 + 2*k*q*z + q**2)*(A*z**2 - A + z**2 - 1) + A*q*z*(k**2 + 2*k*q*z + q**2)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(A**2*z + A**2 + 2*A - z + 1) + k*q*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(-A**3*k - A**3*q*z + A**2*k + A**2*q*z - A*k*z + A*k - k*z - k - q*z) + 2*q*z*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(-A**3*k**2*z - A**3*k*q*z**2 - A**3*k*q - A**3*q**2*z + A**2*k**2*z + A**2*k*q*z**2 + A**2*k*q + A**2*q**2*z + A*k**2*z + A*k*q*z**2 + A*k*q + A*q**2*z - k**2*z - k*q*z**2 - k*q - q**2*z) + q*z*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(A**3*k**2*z + A**3*k*q*z**2 + A**3*k*q + A**3*q**2*z - A**2*k**2*z - A**2*k*q*z**2 - A**2*k*q - A**2*q**2*z - A*k**2*z - A*k*q*z**2 - A*k*q - A*q**2*z + k**2*z + k*q*z**2 + k*q + q**2*z) + q*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(A**3*k**2 + 2*A**3*k*q*z + A**3*q**2*z**2 - A**2*k**2*z - A**2*k**2 - A**2*k*q*z**2 - 2*A**2*k*q*z - A**2*q**2*z**2 + A*k**2*z - A*k**2 - 2*A*k*q*z - A*q**2*z**2 + 2*k**2*z + k**2 + k*q*z**2 + 2*k*q*z + q**2*z**2))*lcs(s, 0, 9)*mom(p, s)/((d - 2)*(d - 1)*(k**2 + 2*k*q*z + q**2))

The expression for T_ij in helical MHD (A = 1): 

1. Tensor structure without the presence of B field (Lambda part): 
None 

2. Tensor structure with the presence of B field (B part): 
I*k*q*rho*(2*k**2*q*z*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + k*q**2*z*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + k*q*(-2*k*z - q*z)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + k*(d - 2)*(z - z_k*z_q)*(2*z**2 - 2)*(k**2 + 2*k*q*z + q**2) + 4*q*z*(k**2 + 2*k*q*z + q**2)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1))*lcs(s, 0, 9)*mom(p, s)/((d - 2)*(d - 1)*(k**2 + 2*k*q*z + q**2))

Preparation for numerical integration for the integrand's tensor part consists in carrying out a replacing of variables k, q --> B*k/nuo, B*q/nuo, after which T_ij is divided into a dimensional factor C_T and a function T1_ij depending only on uo and integration variables: T_ij = C_T*T1_ij. 
For UV divergent diagrams, this procedure applies to both Lambda part of T_ij and to B part of T_ij.

The expression for T1_B_ij (B part of T_1_ij) after momentums replacing: 
A*k*q*(A*k*q*z*(-A**2*k*z - A**2*q + k*z)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + 2*A*k*q*z*(A**2*k*z + A**2*q - k*z)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + A*k*(d - 2)*(z - z_k*z_q)*(k**2 + 2*k*q*z + q**2)*(A*z**2 - A + z**2 - 1) + A*q*z*(k**2 + 2*k*q*z + q**2)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(A**2*z + A**2 + 2*A - z + 1) + k*q*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(-A**3*k - A**3*q*z + A**2*k + A**2*q*z - A*k*z + A*k - k*z - k - q*z) + 2*q*z*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(-A**3*k**2*z - A**3*k*q*z**2 - A**3*k*q - A**3*q**2*z + A**2*k**2*z + A**2*k*q*z**2 + A**2*k*q + A**2*q**2*z + A*k**2*z + A*k*q*z**2 + A*k*q + A*q**2*z - k**2*z - k*q*z**2 - k*q - q**2*z) + q*z*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(A**3*k**2*z + A**3*k*q*z**2 + A**3*k*q + A**3*q**2*z - A**2*k**2*z - A**2*k*q*z**2 - A**2*k*q - A**2*q**2*z - A*k**2*z - A*k*q*z**2 - A*k*q - A*q**2*z + k**2*z + k*q*z**2 + k*q + q**2*z) + q*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(A**3*k**2 + 2*A**3*k*q*z + A**3*q**2*z**2 - A**2*k**2*z - A**2*k**2 - A**2*k*q*z**2 - 2*A**2*k*q*z - A**2*q**2*z**2 + A*k**2*z - A*k**2 - 2*A*k*q*z - A*q**2*z**2 + 2*k**2*z + k**2 + k*q*z**2 + 2*k*q*z + q**2*z**2))/((d - 2)*(d - 1)*(k**2 + 2*k*q*z + q**2)) 

The expression for C_B_T after momentums replacing: 
I*B**3*rho*lcs(s, 0, 9)*mom(p, s)/nuo**3 

Diagram integrand calculation end.

Calculation of the final expression for the integrand. 

F = C_int*F1*T1_ij, where C_int = C_F*C_T.
Dimensional multiplier before the integrand (with symmetric coefficient), i.e. C_int: 
4*I*Pi^2*A^4*B^(-2*d - 4*eps + 1)*go^2*nuo^(2*d + 4*eps)*rho*lcs[s, 0, 9]*mom[p, s]

The UV-convergent part of the integrand without C_int, i.e. F1*T1_ij: 
16*A*k**(-d - 2*eps + 4)*q**(-d - 2*eps + 4)*z_k*z_q**2*(-k*z_k - q*z_q)*((k**2*(uo + 1) - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(q**2*(uo + 1) - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)*sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)*(k**2*uo - k**2*(uo + 1)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + k**2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(q**2*uo + q**2*(uo + 1)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)/16 - (k**2*(uo + 1) - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(q**2*(uo + 1) + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)*sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)*(k**2*uo - k**2*(uo + 1)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + k**2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(q**2*uo + q**2*(uo + 1)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)/16 - (k**2*(uo + 1) + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(q**2*(uo + 1) - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)*sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)*(k**2*uo - k**2*(uo + 1)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + k**2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(q**2*uo + q**2*(uo + 1)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)/16 + (k**2*(uo + 1) + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(q**2*(uo + 1) + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)*sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)*(k**2*uo - k**2*(uo + 1)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + k**2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2)*(q**2*uo + q**2*(uo + 1)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)/16)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(k**2*(uo + 1)/2 + q**2*(uo + 1)/2 + (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)*(A*k*q*z*(-A**2*k*z - A**2*q + k*z)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + 2*A*k*q*z*(A**2*k*z + A**2*q - k*z)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + A*k*(d - 2)*(z - z_k*z_q)*(k**2 + 2*k*q*z + q**2)*(A*z**2 - A + z**2 - 1) + A*q*z*(k**2 + 2*k*q*z + q**2)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(A**2*z + A**2 + 2*A - z + 1) + k*q*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(-A**3*k - A**3*q*z + A**2*k + A**2*q*z - A*k*z + A*k - k*z - k - q*z) + 2*q*z*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(-A**3*k**2*z - A**3*k*q*z**2 - A**3*k*q - A**3*q**2*z + A**2*k**2*z + A**2*k*q*z**2 + A**2*k*q + A**2*q**2*z + A*k**2*z + A*k*q*z**2 + A*k*q + A*q**2*z - k**2*z - k*q*z**2 - k*q - q**2*z) + q*z*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(A**3*k**2*z + A**3*k*q*z**2 + A**3*k*q + A**3*q**2*z - A**2*k**2*z - A**2*k*q*z**2 - A**2*k*q - A**2*q**2*z - A*k**2*z - A*k*q*z**2 - A*k*q - A*q**2*z + k**2*z + k*q*z**2 + k*q + q**2*z) + q*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1)*(A**3*k**2 + 2*A**3*k*q*z + A**3*q**2*z**2 - A**2*k**2*z - A**2*k**2 - A**2*k*q*z**2 - 2*A**2*k*q*z - A**2*q**2*z**2 + A*k**2*z - A*k**2 - 2*A*k*q*z - A*q**2*z**2 + 2*k**2*z + k**2 + k*q*z**2 + 2*k*q*z + q**2*z**2))/(k**2*q*(d - 2)*(d - 1)*(uo + 1)**4*(k**2*(uo + 1) - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(k**2*(uo + 1) + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2))**2*(q**2*(uo + 1) - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*(q**2*(uo + 1) + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2))**2*(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)*(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)*(k**2 + 2*k*q*z + q**2)*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 - sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 - sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 - sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2*(-k**2*(uo + 1)/2 - q**2*(uo + 1)/2 - (uo + 1)*(k**2 + 2*k*q*z + q**2)/2 + sqrt(-4*A*(k*z_k + q*z_q)**2 + (uo - 1)**2*(k**2 + 2*k*q*z + q**2)**2)/2 + sqrt(-4*A*k**2*z_k**2 + k**4*(uo - 1)**2)/2 + sqrt(-4*A*q**2*z_q**2 + q**4*(uo - 1)**2)/2)**2)

Expression for F1*T1_ij in Wolfram Mathematica format: 
16*A*k^(-d - 2*eps + 4)*q^(-d - 2*eps + 4)*Cos[thetak]*Cos[thetaq]^2*(-k*Cos[thetak] - q*Cos[thetaq])*((k^2*(uo + 1) - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2])^2*(q^2*(uo + 1) - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2])^2*Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]*Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]*(k^2*uo - k^2*(uo + 1)/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2)*(k^2*(uo + 1)/2 + k^2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2)*(q^2*uo + q^2*(uo + 1)/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)/16 - (k^2*(uo + 1) - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2])^2*(q^2*(uo + 1) + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2])^2*Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]*Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]*(k^2*uo - k^2*(uo + 1)/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2)*(k^2*(uo + 1)/2 + k^2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2)*(q^2*uo + q^2*(uo + 1)/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)/16 - (k^2*(uo + 1) + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2])^2*(q^2*(uo + 1) - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2])^2*Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]*Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]*(k^2*uo - k^2*(uo + 1)/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2)*(k^2*(uo + 1)/2 + k^2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2)*(q^2*uo + q^2*(uo + 1)/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)/16 + (k^2*(uo + 1) + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2])^2*(q^2*(uo + 1) + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2])^2*Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]*Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]*(k^2*uo - k^2*(uo + 1)/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2)*(k^2*(uo + 1)/2 + k^2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2)*(q^2*uo + q^2*(uo + 1)/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)/16)*(k^2*(uo + 1)/2 + q^2*(uo + 1)/2 + (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(k^2*(uo + 1)/2 + q^2*(uo + 1)/2 + (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(k^2*(uo + 1)/2 + q^2*(uo + 1)/2 + (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(k^2*(uo + 1)/2 + q^2*(uo + 1)/2 + (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(k^2*(uo + 1)/2 + q^2*(uo + 1)/2 + (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(k^2*(uo + 1)/2 + q^2*(uo + 1)/2 + (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(k^2*(uo + 1)/2 + q^2*(uo + 1)/2 + (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(k^2*(uo + 1)/2 + q^2*(uo + 1)/2 + (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)*(A*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*(-A^2*k*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - A^2*q + k*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]))*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*Cos[thetak]*Cos[thetaq] + Cos[thetak]^2 + Cos[thetaq]^2 - 1) + 2*A*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*(A^2*k*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + A^2*q - k*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]))*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*Cos[thetak]*Cos[thetaq] + Cos[thetak]^2 + Cos[thetaq]^2 - 1) + A*k*(d - 2)*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - Cos[thetak]*Cos[thetaq])*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)*(A*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - A + (Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 1) + A*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*Cos[thetak]*Cos[thetaq] + Cos[thetak]^2 + Cos[thetaq]^2 - 1)*(A^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + A^2 + 2*A - (Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + 1) + k*q*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*Cos[thetak]*Cos[thetaq] + Cos[thetak]^2 + Cos[thetaq]^2 - 1)*(-A^3*k - A^3*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + A^2*k + A^2*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - A*k*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + A*k - k*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - k - q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])) + 2*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*Cos[thetak]*Cos[thetaq] + Cos[thetak]^2 + Cos[thetaq]^2 - 1)*(-A^3*k^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - A^3*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - A^3*k*q - A^3*q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + A^2*k^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + A^2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 + A^2*k*q + A^2*q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + A*k^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + A*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 + A*k*q + A*q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - k^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - k*q - q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])) + q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*Cos[thetak]*Cos[thetaq] + Cos[thetak]^2 + Cos[thetaq]^2 - 1)*(A^3*k^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + A^3*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 + A^3*k*q + A^3*q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - A^2*k^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - A^2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - A^2*k*q - A^2*q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - A*k^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - A*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - A*k*q - A*q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + k^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 + k*q + q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])) + q*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*Cos[thetak]*Cos[thetaq] + Cos[thetak]^2 + Cos[thetaq]^2 - 1)*(A^3*k^2 + 2*A^3*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + A^3*q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - A^2*k^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - A^2*k^2 - A^2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*A^2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - A^2*q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 + A*k^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - A*k^2 - 2*A*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - A*q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 + 2*k^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + k^2 + k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2))/(k^2*q*(d - 2)*(d - 1)*(uo + 1)^4*(k^2*(uo + 1) - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2])^2*(k^2*(uo + 1) + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2])^2*(q^2*(uo + 1) - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2])^2*(q^2*(uo + 1) + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2])^2*(-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2)*(-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)^2*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)^2*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)^2*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 - Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)^2*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)^2*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 - Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)^2*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 - Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)^2*(-k^2*(uo + 1)/2 - q^2*(uo + 1)/2 - (uo + 1)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)/2 + Sqrt[-4*A*(k*Cos[thetak] + q*Cos[thetaq])^2 + (uo - 1)^2*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]/2 + Sqrt[-4*A*k^2*Cos[thetak]^2 + k^4*(uo - 1)^2]/2 + Sqrt[-4*A*q^2*Cos[thetaq]^2 + q^4*(uo - 1)^2]/2)^2)

One-loop reciprocal magnetic Prandtl number at the fixed point uo = 1.393.
The entered values of the bare magnetic Prandtl number uo: [1.393]
Below are the integrands corresponding to the entered values of uo.

Diagram integrand for uo = 1.393: 
1.962e-10*z_k*z_q**2*(-k*z_k - q*z_q)*(8.198*(0.1965*k**2 - sqrt(0.03861*k**4 - k**2*z_k**2))*(k**2 - 0.8358*sqrt(0.03861*k**4 - k**2*z_k**2))**2*(2.197*k**2 + sqrt(0.03861*k**4 - k**2*z_k**2))*sqrt(0.03861*k**4 - k**2*z_k**2)*(q**2 - 0.8358*sqrt(0.03861*q**4 - q**2*z_q**2))**2*(2.59*q**2 + sqrt(0.03861*q**4 - q**2*z_q**2))*sqrt(0.03861*q**4 - q**2*z_q**2)*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2)) - 8.198*(0.1965*k**2 - sqrt(0.03861*k**4 - k**2*z_k**2))*(k**2 - 0.8358*sqrt(0.03861*k**4 - k**2*z_k**2))**2*(2.197*k**2 + sqrt(0.03861*k**4 - k**2*z_k**2))*sqrt(0.03861*k**4 - k**2*z_k**2)*(q**2 + 0.8358*sqrt(0.03861*q**4 - q**2*z_q**2))**2*(2.59*q**2 - sqrt(0.03861*q**4 - q**2*z_q**2))*sqrt(0.03861*q**4 - q**2*z_q**2)*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2)) - 8.198*(0.1965*k**2 + sqrt(0.03861*k**4 - k**2*z_k**2))*(k**2 + 0.8358*sqrt(0.03861*k**4 - k**2*z_k**2))**2*(2.197*k**2 - sqrt(0.03861*k**4 - k**2*z_k**2))*sqrt(0.03861*k**4 - k**2*z_k**2)*(q**2 - 0.8358*sqrt(0.03861*q**4 - q**2*z_q**2))**2*(2.59*q**2 + sqrt(0.03861*q**4 - q**2*z_q**2))*sqrt(0.03861*q**4 - q**2*z_q**2)*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2)) + 8.198*(0.1965*k**2 + sqrt(0.03861*k**4 - k**2*z_k**2))*(k**2 + 0.8358*sqrt(0.03861*k**4 - k**2*z_k**2))**2*(2.197*k**2 - sqrt(0.03861*k**4 - k**2*z_k**2))*sqrt(0.03861*k**4 - k**2*z_k**2)*(q**2 + 0.8358*sqrt(0.03861*q**4 - q**2*z_q**2))**2*(2.59*q**2 - sqrt(0.03861*q**4 - q**2*z_q**2))*sqrt(0.03861*q**4 - q**2*z_q**2)*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(-2.393*k**2 - 2.393*k*q*z - 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2)))*(2*k**2*q*z*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + k*q**2*z*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + k*q*(-2*k*z - q*z)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1) + k*(z - z_k*z_q)*(2*z**2 - 2)*(k**2 + 2*k*q*z + q**2) + 4*q*z*(k**2 + 2*k*q*z + q**2)*(z**2 - 2*z*z_k*z_q + z_k**2 + z_q**2 - 1))*(2.393*k**2 + 2.393*k*q*z + 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(2.393*k**2 + 2.393*k*q*z + 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(2.393*k**2 + 2.393*k*q*z + 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(2.393*k**2 + 2.393*k*q*z + 2.393*q**2 - sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(2.393*k**2 + 2.393*k*q*z + 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(2.393*k**2 + 2.393*k*q*z + 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) - sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(2.393*k**2 + 2.393*k*q*z + 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) - sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))*(2.393*k**2 + 2.393*k*q*z + 2.393*q**2 + sqrt(0.03861*k**4 - k**2*z_k**2) + sqrt(0.03861*q**4 - q**2*z_q**2) + sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))/(k*(k**2 - 0.8358*sqrt(0.03861*k**4 - k**2*z_k**2))**2*(k**2 + 0.8358*sqrt(0.03861*k**4 - k**2*z_k**2))**2*(0.1545*k**4 - 4*k**2*z_k**2)*(q**2 - 0.8358*sqrt(0.03861*q**4 - q**2*z_q**2))**2*(q**2 + 0.8358*sqrt(0.03861*q**4 - q**2*z_q**2))**2*(0.1545*q**4 - 4*q**2*z_q**2)*(k**2 + 2*k*q*z + q**2)*(-k**2 - k*q*z - q**2 - 0.4179*sqrt(0.03861*k**4 - k**2*z_k**2) - 0.4179*sqrt(0.03861*q**4 - q**2*z_q**2) - 0.4179*sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))**2*(-k**2 - k*q*z - q**2 - 0.4179*sqrt(0.03861*k**4 - k**2*z_k**2) - 0.4179*sqrt(0.03861*q**4 - q**2*z_q**2) + 0.4179*sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))**2*(-k**2 - k*q*z - q**2 - 0.4179*sqrt(0.03861*k**4 - k**2*z_k**2) + 0.4179*sqrt(0.03861*q**4 - q**2*z_q**2) - 0.4179*sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))**2*(-k**2 - k*q*z - q**2 - 0.4179*sqrt(0.03861*k**4 - k**2*z_k**2) + 0.4179*sqrt(0.03861*q**4 - q**2*z_q**2) + 0.4179*sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))**2*(-k**2 - k*q*z - q**2 + 0.4179*sqrt(0.03861*k**4 - k**2*z_k**2) - 0.4179*sqrt(0.03861*q**4 - q**2*z_q**2) - 0.4179*sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))**2*(-k**2 - k*q*z - q**2 + 0.4179*sqrt(0.03861*k**4 - k**2*z_k**2) - 0.4179*sqrt(0.03861*q**4 - q**2*z_q**2) + 0.4179*sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))**2*(-k**2 - k*q*z - q**2 + 0.4179*sqrt(0.03861*k**4 - k**2*z_k**2) + 0.4179*sqrt(0.03861*q**4 - q**2*z_q**2) - 0.4179*sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))**2*(-k**2 - k*q*z - q**2 + 0.4179*sqrt(0.03861*k**4 - k**2*z_k**2) + 0.4179*sqrt(0.03861*q**4 - q**2*z_q**2) + 0.4179*sqrt(-(k*z_k + q*z_q)**2 + 0.03861*(k**2 + 2*k*q*z + q**2)**2))**2) 

Diagram integrand for uo = 1.393 in Wolfram Mathematica format: 
1.962e-10*Cos[thetak]*Cos[thetaq]^2*(-k*Cos[thetak] - q*Cos[thetaq])*(8.198*(0.1965*k^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])*(k^2 - 0.8358*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])^2*(2.197*k^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2]*(q^2 - 0.8358*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2])^2*(2.59*q^2 + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2])*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2]*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]) - 8.198*(0.1965*k^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])*(k^2 - 0.8358*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])^2*(2.197*k^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2]*(q^2 + 0.8358*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2])^2*(2.59*q^2 - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2])*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2]*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]) - 8.198*(0.1965*k^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])*(k^2 + 0.8358*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])^2*(2.197*k^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2]*(q^2 - 0.8358*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2])^2*(2.59*q^2 + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2])*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2]*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]) + 8.198*(0.1965*k^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])*(k^2 + 0.8358*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])^2*(2.197*k^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2]*(q^2 + 0.8358*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2])^2*(2.59*q^2 - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2])*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2]*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(-2.393*k^2 - 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2]))*(2*k^2*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*Cos[thetak]*Cos[thetaq] + Cos[thetak]^2 + Cos[thetaq]^2 - 1) + k*q^2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*Cos[thetak]*Cos[thetaq] + Cos[thetak]^2 + Cos[thetaq]^2 - 1) + k*q*(-2*k*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]))*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*Cos[thetak]*Cos[thetaq] + Cos[thetak]^2 + Cos[thetaq]^2 - 1) + k*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - Cos[thetak]*Cos[thetaq])*(2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2) + 4*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)*((Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])^2 - 2*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq])*Cos[thetak]*Cos[thetaq] + Cos[thetak]^2 + Cos[thetaq]^2 - 1))*(2.393*k^2 + 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(2.393*k^2 + 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(2.393*k^2 + 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(2.393*k^2 + 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + 2.393*q^2 - Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(2.393*k^2 + 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(2.393*k^2 + 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(2.393*k^2 + 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])*(2.393*k^2 + 2.393*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + 2.393*q^2 + Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])/(k*(k^2 - 0.8358*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])^2*(k^2 + 0.8358*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2])^2*(0.1545*k^4 - 4*k^2*Cos[thetak]^2)*(q^2 - 0.8358*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2])^2*(q^2 + 0.8358*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2])^2*(0.1545*q^4 - 4*q^2*Cos[thetaq]^2)*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)*(-k^2 - k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - q^2 - 0.4179*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - 0.4179*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - 0.4179*Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])^2*(-k^2 - k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - q^2 - 0.4179*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - 0.4179*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + 0.4179*Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])^2*(-k^2 - k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - q^2 - 0.4179*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + 0.4179*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - 0.4179*Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])^2*(-k^2 - k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - q^2 - 0.4179*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + 0.4179*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + 0.4179*Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])^2*(-k^2 - k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - q^2 + 0.4179*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - 0.4179*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - 0.4179*Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])^2*(-k^2 - k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - q^2 + 0.4179*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] - 0.4179*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + 0.4179*Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])^2*(-k^2 - k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - q^2 + 0.4179*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + 0.4179*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] - 0.4179*Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])^2*(-k^2 - k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) - q^2 + 0.4179*Sqrt[0.03861*k^4 - k^2*Cos[thetak]^2] + 0.4179*Sqrt[0.03861*q^4 - q^2*Cos[thetaq]^2] + 0.4179*Sqrt[-(k*Cos[thetak] + q*Cos[thetaq])^2 + 0.03861*(k^2 + 2*k*q*(Sin[thetaq]*Sin[thetak]*Cos[2*phi] + Cos[thetak]*Cos[thetaq]) + q^2)^2])^2) 
